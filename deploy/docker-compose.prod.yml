version: '3.8'

services:
  # ===== 백엔드 서버 =====
  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4100:4100"
    env_file:
      - ./env/.env.prod.server
    environment:
      - NODE_ENV=production
      - PORT=4100
    depends_on:
      postgres: { condition: service_healthy }
      redis:    { condition: service_healthy }
    networks:
      - tango-network
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:4100/api/v1/_ping || curl -fsS http://localhost:4100/api/v1/_ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # ===== 데이터베이스 =====
  postgres:
    image: postgres:15-alpine
    container_name: tango-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tango_prod}
      POSTGRES_USER: ${POSTGRES_USER:-tango}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-prod-data:/var/lib/postgresql/data
    networks:
      - tango-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-tango} -d ${POSTGRES_DB:-tango_prod}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # ===== Redis =====
  redis:
    image: redis:7-alpine
    container_name: tango-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis-prod-data:/data
    networks:
      - tango-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # ===== 프론트엔드 (선택사항) =====
  web:
    build:
      context: ../tango-web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./env/.env.prod.web
    environment:
      - NODE_ENV=production
    networks:
      - tango-network
    restart: unless-stopped
    depends_on:
      - server
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

networks:
  tango-network:
    driver: bridge

volumes:
  postgres-prod-data:
  redis-prod-data:
